{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _apiDocParser = require(\"@api-platform/api-doc-parser\");\n\nvar _jsonld = _interopRequireDefault(require(\"jsonld\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Sends HTTP requests to a Hydra API.\n *\n * Adapted from react-admin\n *\n * @copyright KÃ©vin Dunglas\n *\n * @param {string} url\n * @param {object} options\n * @return {object}\n */\n\n\nvar _default = function (url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const requestHeaders = options.headers || new Headers();\n\n  if (options.user && options.user.authenticated && options.user.token) {\n    requestHeaders.set('Authorization', options.user.token);\n  }\n\n  const authOptions = { ...options,\n    headers: requestHeaders\n  };\n  return (0, _apiDocParser.fetchJsonLd)(url, authOptions).then(data => {\n    const status = data.response.status;\n\n    if (status < 200 || status >= 300) {\n      const body = data.body;\n      delete body.trace;\n      return _jsonld.default.expand(body, {\n        base: (0, _apiDocParser.getDocumentationUrlFromHeaders)(data.response.headers),\n        documentLoader: input => (0, _apiDocParser.fetchJsonLd)(input, authOptions)\n      }).then(json => {\n        return Promise.reject(new _reactAdmin.HttpError(json[0]['http://www.w3.org/ns/hydra/core#description'][0]['@value'], status, json));\n      }).catch(e => {\n        if (e.hasOwnProperty('body')) {\n          return Promise.reject(e);\n        }\n\n        return Promise.reject(new _reactAdmin.HttpError(data.response.statusText, status));\n      });\n    }\n\n    return {\n      status: status,\n      headers: data.response.headers,\n      json: data.body\n    };\n  });\n};\n\nexports.default = _default;","map":{"version":3,"sources":["C:/newproject/bookshop-api/myadmin/node_modules/@api-platform/admin/lib/hydra/fetchHydra.js"],"names":["Object","defineProperty","exports","value","default","_reactAdmin","require","_apiDocParser","_jsonld","_interopRequireDefault","obj","__esModule","_default","url","options","requestHeaders","headers","Headers","user","authenticated","token","set","authOptions","fetchJsonLd","then","data","status","response","body","trace","expand","base","getDocumentationUrlFromHeaders","documentLoader","input","json","Promise","reject","HttpError","catch","e","hasOwnProperty","statusText"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _apiDocParser = require(\"@api-platform/api-doc-parser\");\n\nvar _jsonld = _interopRequireDefault(require(\"jsonld\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sends HTTP requests to a Hydra API.\n *\n * Adapted from react-admin\n *\n * @copyright KÃ©vin Dunglas\n *\n * @param {string} url\n * @param {object} options\n * @return {object}\n */\nvar _default = (url, options = {}) => {\n  const requestHeaders = options.headers || new Headers();\n\n  if (options.user && options.user.authenticated && options.user.token) {\n    requestHeaders.set('Authorization', options.user.token);\n  }\n\n  const authOptions = { ...options,\n    headers: requestHeaders\n  };\n  return (0, _apiDocParser.fetchJsonLd)(url, authOptions).then(data => {\n    const status = data.response.status;\n\n    if (status < 200 || status >= 300) {\n      const body = data.body;\n      delete body.trace;\n      return _jsonld.default.expand(body, {\n        base: (0, _apiDocParser.getDocumentationUrlFromHeaders)(data.response.headers),\n        documentLoader: input => (0, _apiDocParser.fetchJsonLd)(input, authOptions)\n      }).then(json => {\n        return Promise.reject(new _reactAdmin.HttpError(json[0]['http://www.w3.org/ns/hydra/core#description'][0]['@value'], status, json));\n      }).catch(e => {\n        if (e.hasOwnProperty('body')) {\n          return Promise.reject(e);\n        }\n\n        return Promise.reject(new _reactAdmin.HttpError(data.response.statusText, status));\n      });\n    }\n\n    return {\n      status: status,\n      headers: data.response.headers,\n      json: data.body\n    };\n  });\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}