{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar utilities_1 = require(\"graphql/utilities\");\n\nvar fetchQuery_1 = tslib_1.__importDefault(require(\"./fetchQuery\"));\n\nvar Api_1 = require(\"../Api\");\n\nvar Field_1 = require(\"../Field\");\n\nvar Resource_1 = require(\"../Resource\");\n\nvar getRangeFromGraphQlType = function (type) {\n  if (type.kind === \"NON_NULL\") {\n    if (type.ofType.kind === \"LIST\") {\n      return \"Array<\" + getRangeFromGraphQlType(type.ofType.ofType) + \">\";\n    }\n\n    return type.ofType.name;\n  }\n\n  if (type.kind === \"LIST\") {\n    return \"Array<\" + getRangeFromGraphQlType(type.ofType) + \">\";\n  }\n\n  return type.name;\n};\n\nvar getReferenceFromGraphQlType = function (type) {\n  if (type.kind === \"OBJECT\" && type.name.endsWith(\"Connection\")) {\n    return type.name.slice(0, type.name.lastIndexOf(\"Connection\"));\n  }\n\n  return null;\n};\n\nexports.default = function (entrypointUrl, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n    var introspectionQuery, _a, response, schema, typeResources, resources;\n\n    return tslib_1.__generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          introspectionQuery = utilities_1.getIntrospectionQuery();\n          return [4\n          /*yield*/\n          , fetchQuery_1.default(entrypointUrl, introspectionQuery, options)];\n\n        case 1:\n          _a = _b.sent(), response = _a.response, schema = _a.body.data.__schema;\n          typeResources = schema.types.filter(function (type) {\n            var _a, _b;\n\n            return type.kind === \"OBJECT\" && type.name !== schema.queryType.name && type.name !== ((_a = schema.mutationType) === null || _a === void 0 ? void 0 : _a.name) && type.name !== ((_b = schema.subscriptionType) === null || _b === void 0 ? void 0 : _b.name) && !type.name.startsWith(\"__\") && // mutation\n            !type.name.startsWith(type.name[0].toLowerCase()) && !type.name.endsWith(\"Connection\") && !type.name.endsWith(\"Edge\") && !type.name.endsWith(\"PageInfo\");\n          });\n          resources = [];\n          typeResources.forEach(function (typeResource) {\n            var fields = [];\n            var readableFields = [];\n            var writableFields = [];\n            typeResource.fields.forEach(function (resourceFieldType) {\n              var field = new Field_1.Field(resourceFieldType.name, {\n                range: getRangeFromGraphQlType(resourceFieldType.type),\n                reference: getReferenceFromGraphQlType(resourceFieldType.type),\n                required: resourceFieldType.type.kind === \"NON_NULL\",\n                description: resourceFieldType.description,\n                deprecated: resourceFieldType.isDeprecated\n              });\n              fields.push(field);\n              readableFields.push(field);\n              writableFields.push(field);\n            });\n            resources.push(new Resource_1.Resource(typeResource.name, \"\", {\n              fields: fields,\n              readableFields: readableFields,\n              writableFields: writableFields\n            }));\n          });\n          resources.forEach(function (resource) {\n            var _a;\n\n            (_a = resource.fields) === null || _a === void 0 ? void 0 : _a.forEach(function (field) {\n              if (null !== field.reference) {\n                field.reference = resources.find(function (resource) {\n                  return resource.name === field.reference;\n                }) || null;\n              } else if (null !== field.range) {\n                field.reference = resources.find(function (resource) {\n                  return resource.name === field.range;\n                }) || null;\n              }\n            });\n          });\n          return [2\n          /*return*/\n          , {\n            api: new Api_1.Api(entrypointUrl, {\n              resources: resources\n            }),\n            response: response\n          }];\n      }\n    });\n  });\n};","map":{"version":3,"sources":["../../src/graphql/parseGraphQl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utilities_1 = require(\"graphql/utilities\");\nvar fetchQuery_1 = tslib_1.__importDefault(require(\"./fetchQuery\"));\nvar Api_1 = require(\"../Api\");\nvar Field_1 = require(\"../Field\");\nvar Resource_1 = require(\"../Resource\");\nvar getRangeFromGraphQlType = function (type) {\n    if (type.kind === \"NON_NULL\") {\n        if (type.ofType.kind === \"LIST\") {\n            return \"Array<\" + getRangeFromGraphQlType(type.ofType.ofType) + \">\";\n        }\n        return type.ofType.name;\n    }\n    if (type.kind === \"LIST\") {\n        return \"Array<\" + getRangeFromGraphQlType(type.ofType) + \">\";\n    }\n    return type.name;\n};\nvar getReferenceFromGraphQlType = function (type) {\n    if (type.kind === \"OBJECT\" && type.name.endsWith(\"Connection\")) {\n        return type.name.slice(0, type.name.lastIndexOf(\"Connection\"));\n    }\n    return null;\n};\nexports.default = (function (entrypointUrl, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n        var introspectionQuery, _a, response, schema, typeResources, resources;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    introspectionQuery = utilities_1.getIntrospectionQuery();\n                    return [4 /*yield*/, fetchQuery_1.default(entrypointUrl, introspectionQuery, options)];\n                case 1:\n                    _a = (_b.sent()), response = _a.response, schema = _a.body.data.__schema;\n                    typeResources = schema.types.filter(function (type) {\n                        var _a, _b;\n                        return type.kind === \"OBJECT\" &&\n                            type.name !== schema.queryType.name &&\n                            type.name !== ((_a = schema.mutationType) === null || _a === void 0 ? void 0 : _a.name) &&\n                            type.name !== ((_b = schema.subscriptionType) === null || _b === void 0 ? void 0 : _b.name) &&\n                            !type.name.startsWith(\"__\") &&\n                            // mutation\n                            !type.name.startsWith(type.name[0].toLowerCase()) &&\n                            !type.name.endsWith(\"Connection\") &&\n                            !type.name.endsWith(\"Edge\") &&\n                            !type.name.endsWith(\"PageInfo\");\n                    });\n                    resources = [];\n                    typeResources.forEach(function (typeResource) {\n                        var fields = [];\n                        var readableFields = [];\n                        var writableFields = [];\n                        typeResource.fields.forEach(function (resourceFieldType) {\n                            var field = new Field_1.Field(resourceFieldType.name, {\n                                range: getRangeFromGraphQlType(resourceFieldType.type),\n                                reference: getReferenceFromGraphQlType(resourceFieldType.type),\n                                required: resourceFieldType.type.kind === \"NON_NULL\",\n                                description: resourceFieldType.description,\n                                deprecated: resourceFieldType.isDeprecated,\n                            });\n                            fields.push(field);\n                            readableFields.push(field);\n                            writableFields.push(field);\n                        });\n                        resources.push(new Resource_1.Resource(typeResource.name, \"\", {\n                            fields: fields,\n                            readableFields: readableFields,\n                            writableFields: writableFields,\n                        }));\n                    });\n                    resources.forEach(function (resource) {\n                        var _a;\n                        (_a = resource.fields) === null || _a === void 0 ? void 0 : _a.forEach(function (field) {\n                            if (null !== field.reference) {\n                                field.reference =\n                                    resources.find(function (resource) { return resource.name === field.reference; }) ||\n                                        null;\n                            }\n                            else if (null !== field.range) {\n                                field.reference =\n                                    resources.find(function (resource) { return resource.name === field.range; }) || null;\n                            }\n                        });\n                    });\n                    return [2 /*return*/, {\n                            api: new Api_1.Api(entrypointUrl, { resources: resources }),\n                            response: response,\n                        }];\n            }\n        });\n    });\n});\n//# sourceMappingURL=parseGraphQl.js.map"]},"metadata":{},"sourceType":"script"}