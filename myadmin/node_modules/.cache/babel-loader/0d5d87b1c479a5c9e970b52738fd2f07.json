{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar setOptions = function (query, options) {\n  if (!options.method) {\n    options.method = \"POST\";\n  }\n\n  if (!(options.headers instanceof Headers)) {\n    options.headers = new Headers(options.headers);\n  }\n\n  if (null === options.headers.get(\"Content-Type\")) {\n    options.headers.set(\"Content-Type\", \"application/json\");\n  }\n\n  if (\"GET\" !== options.method && !options.body) {\n    options.body = JSON.stringify({\n      query: query\n    });\n  }\n\n  return options;\n};\n\nexports.default = function (url, query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n    var response, body;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , fetch(url, setOptions(query, options))];\n\n        case 1:\n          response = _a.sent();\n          return [4\n          /*yield*/\n          , response.json()];\n\n        case 2:\n          body = _a.sent();\n\n          if (body === null || body === void 0 ? void 0 : body.errors) {\n            return [2\n            /*return*/\n            , Promise.reject({\n              response: response,\n              body: body\n            })];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve({\n            response: response,\n            body: body\n          })];\n      }\n    });\n  });\n};","map":{"version":3,"sources":["../../src/graphql/fetchQuery.ts"],"names":[],"mappings":";;;;;;;;AAEA,IAAM,UAAU,GAAG,UAAC,KAAD,EAAgB,OAAhB,EAAoC;AACrD,MAAI,CAAC,OAAO,CAAC,MAAb,EAAqB;AACnB,IAAA,OAAO,CAAC,MAAR,GAAiB,MAAjB;AACD;;AAED,MAAI,EAAE,OAAO,CAAC,OAAR,YAA2B,OAA7B,CAAJ,EAA2C;AACzC,IAAA,OAAO,CAAC,OAAR,GAAkB,IAAI,OAAJ,CAAY,OAAO,CAAC,OAApB,CAAlB;AACD;;AAED,MAAI,SAAS,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,cAApB,CAAb,EAAkD;AAChD,IAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,cAApB,EAAoC,kBAApC;AACD;;AAED,MAAI,UAAU,OAAO,CAAC,MAAlB,IAA4B,CAAC,OAAO,CAAC,IAAzC,EAA+C;AAC7C,IAAA,OAAO,CAAC,IAAR,GAAe,IAAI,CAAC,SAAL,CAAe;AAAE,MAAA,KAAK,EAAA;AAAP,KAAf,CAAf;AACD;;AAED,SAAO,OAAP;AACD,CAlBD;;AAoBA,OAAA,CAAA,OAAA,GAAe,UACb,GADa,EAEb,KAFa,EAGb,OAHa,EAGY;AAAzB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAyB;;;;;;;AAKR,iBAAA,CAAA;AAAA;AAAA,YAAM,KAAK,CAAC,GAAD,EAAM,UAAU,CAAC,KAAD,EAAQ,OAAR,CAAhB,CAAX,CAAA;;;AAAX,UAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AACQ,iBAAA,CAAA;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN,CAAA;;;AAAR,UAAA,IAAI,GAAI,EAAA,CAAA,IAAA,EAAR;;AAEN,cAAI,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAV,EAAkB;AAChB,mBAAA,CAAA;AAAA;AAAA,cAAO,OAAO,CAAC,MAAR,CAAe;AAAE,cAAA,QAAQ,EAAA,QAAV;AAAY,cAAA,IAAI,EAAA;AAAhB,aAAf,CAAP,CAAA;AACD;;AAED,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,OAAR,CAAgB;AAAE,YAAA,QAAQ,EAAA,QAAV;AAAY,YAAA,IAAI,EAAA;AAAhB,WAAhB,CAAP,CAAA;;;;AACD,CAhBD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar setOptions = function (query, options) {\n    if (!options.method) {\n        options.method = \"POST\";\n    }\n    if (!(options.headers instanceof Headers)) {\n        options.headers = new Headers(options.headers);\n    }\n    if (null === options.headers.get(\"Content-Type\")) {\n        options.headers.set(\"Content-Type\", \"application/json\");\n    }\n    if (\"GET\" !== options.method && !options.body) {\n        options.body = JSON.stringify({ query: query });\n    }\n    return options;\n};\nexports.default = (function (url, query, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n        var response, body;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, fetch(url, setOptions(query, options))];\n                case 1:\n                    response = _a.sent();\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    body = (_a.sent());\n                    if (body === null || body === void 0 ? void 0 : body.errors) {\n                        return [2 /*return*/, Promise.reject({ response: response, body: body })];\n                    }\n                    return [2 /*return*/, Promise.resolve({ response: response, body: body })];\n            }\n        });\n    });\n});\n//# sourceMappingURL=fetchQuery.js.map"]},"metadata":{},"sourceType":"script"}